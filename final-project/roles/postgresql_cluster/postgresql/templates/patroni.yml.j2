scope: postgres
namespace: /db/
name: "{{ ansible_hostname }}"

restapi:
  listen: "{{ ansible_default_ipv4.address }}:8008"
  connect_address: "{{ ansible_default_ipv4.address }}:8008"

etcd:
  hosts: {% for host in groups['postgres_cluster'] %}
           "{{ hostvars[host]['ansible_default_ipv4']['address'] }}:2379"{% if not loop.last %},{% endif %}
         {% endfor %}

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        wal_level: replica
        hot_standby: on
        wal_keep_segments: 8
        max_wal_senders: 5
        max_replication_slots: 5
        checkpoint_timeout: 30
  initdb:
  - encoding: UTF8
  - data-checksums
  pg_hba:
  - host replication replicator {{ ansible_default_ipv4.network }}/{{ ansible_default_ipv4.netmask }} md5
  - host all all 0.0.0.0/0 md5

postgresql:
  listen: "{{ ansible_default_ipv4.address }}:5432"
  connect_address: "{{ ansible_default_ipv4.address }}:5432"
  data_dir: "/var/lib/postgresql/12/main"
  pgpass: /tmp/pgpass
  authentication:
    replication:
      username: replicator
      password: replicapass
    superuser:
      username: postgres
      password: secretpassword
  parameters:
    unix_socket_directories: '/var/run/postgresql'

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false
